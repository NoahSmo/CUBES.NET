<UserControl x:Class="WpfApp.View.ProviderListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:WpfApp.ViewModel"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <viewModel:ProviderListViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="0.3*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.ColumnSpan="2" Margin="50">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Button Command="{Binding ToggleAddMenu}" HorizontalAlignment="Left">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <materialDesign:PackIcon VerticalAlignment="Center" Kind="Add"/>
                    <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="Add"/>
                </Grid>
            </Button>
            <DataGrid IsReadOnly="True" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding ProvidersList}" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                    <DataGridTemplateColumn Header="Description" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Description}" TextWrapping="WrapWithOverflow"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Email" Binding="{Binding Email}"/>
                    
                    <DataGridTextColumn Header="Street" Binding="{Binding Address.Street}"/>
                    <DataGridTextColumn Header="City" Binding="{Binding Address.City}"/>
                    <DataGridTextColumn Header="ZipCode" Binding="{Binding Address.ZipCode}"/>
                    <DataGridTextColumn Header="Country" Binding="{Binding Address.Country}"/>
                    
                    
                    
                    <DataGridTemplateColumn Header="Action" Width="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Button ToolTip="Edit" Padding="0" Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid,Mode=FindAncestor},Path=DataContext.ToggleEditMenu}" Style="{StaticResource MaterialDesignFlatButton}" CommandParameter="{Binding }">
                                        <materialDesign:PackIcon Kind="Pen"/>
                                    </Button>
                                    <Button Grid.Column="1" ToolTip="Delete" Padding="0" Command="{Binding RelativeSource={RelativeSource AncestorType=DataGrid,Mode=FindAncestor},Path=DataContext.DeleteProviderCommand}" Style="{StaticResource MaterialDesignFlatButton}" CommandParameter="{Binding }">
                                        <materialDesign:PackIcon Kind="Delete"/>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid Background="#f6f6f6" Grid.Column="1" Visibility="{Binding VisibilityEditMenu,Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel Margin="10" Orientation="Vertical">
                <TextBox Margin="5" materialDesign:HintAssist.Hint="Name" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectProvider.Name,UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox Margin="5" materialDesign:HintAssist.Hint="Description" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectProvider.Description,UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox Margin="5" materialDesign:HintAssist.Hint="Email" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectProvider.Email,UpdateSourceTrigger=PropertyChanged}"/>
                
                
                <StackPanel Orientation="Horizontal">
                    <TextBox Margin="5" materialDesign:HintAssist.Hint="Address" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectAddress.Street,FallbackValue='Street',UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Margin="5" materialDesign:HintAssist.Hint="City" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectAddress.City, FallbackValue='City',UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Margin="5" materialDesign:HintAssist.Hint="ZipCode" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectAddress.ZipCode, FallbackValue='10000',UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Margin="5" materialDesign:HintAssist.Hint="Country" materialDesign:HintAssist.IsFloating="True" Text="{Binding SelectAddress.Country, FallbackValue='Country',UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                
                
                <Button Margin="5,20" Content="Save" Command="{Binding SaveProviderCommand}" CommandParameter="{Binding SelectProvider}"/>
            </StackPanel>
        </Grid>
        <CheckBox IsChecked="{Binding VisibilityEditMenu}" Visibility="{Binding VisibilityEditMenu,Converter={StaticResource BooleanToVisibilityConverter}}">
            <CheckBox.Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid Background="Transparent"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </CheckBox.Style>
        </CheckBox>
    </Grid>
</UserControl>
